server:
  port: 8090

spring:
  application:
    name: irctc-api-gateway
  cloud:
    compatibility-verifier:
      enabled: false
    gateway:
      routes:
        # User Service Routes
        - id: user-service
          uri: lb://IRCTC-USER-SERVICE
          predicates:
            - Path=/api/users/**
          filters:
            - StripPrefix=1
        
        # Train Service Routes (Future)
        - id: train-service
          uri: lb://irctc-train-service
          predicates:
            - Path=/api/trains/**
          filters:
            - StripPrefix=1
        
        # Booking Service Routes (Future)
        - id: booking-service
          uri: lb://irctc-booking-service
          predicates:
            - Path=/api/bookings/**
          filters:
            - StripPrefix=1
        
        # Payment Service Routes (Future)
        - id: payment-service
          uri: lb://irctc-payment-service
          predicates:
            - Path=/api/payments/**
          filters:
            - StripPrefix=1
        
        # Notification Service Routes (Future)
        - id: notification-service
          uri: lb://irctc-notification-service
          predicates:
            - Path=/api/notifications/**
          filters:
            - StripPrefix=1
      
      # Global CORS configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
      
      # Circuit Breaker configuration (disabled for testing)
      # default-filters:
      #   - name: CircuitBreaker
      #     args:
      #       name: default
      #       fallbackUri: forward:/fallback

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      default:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
  
  retry:
    instances:
      default:
        max-attempts: 3
        wait-duration: 1s
        retry-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException

# Logging Configuration
logging:
  level:
    com.irctc.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/irctc-api-gateway.log

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
